[{"/Users/johnhands/Desktop/Coding/trello_clone/src/index.js":"1","/Users/johnhands/Desktop/Coding/trello_clone/src/App.js":"2","/Users/johnhands/Desktop/Coding/trello_clone/src/components/List/List.js":"3","/Users/johnhands/Desktop/Coding/trello_clone/src/components/List/Title.js":"4","/Users/johnhands/Desktop/Coding/trello_clone/src/components/Card.js":"5","/Users/johnhands/Desktop/Coding/trello_clone/src/components/Input/InputContainer.js":"6","/Users/johnhands/Desktop/Coding/trello_clone/src/components/Input/InputItem.js":"7","/Users/johnhands/Desktop/Coding/trello_clone/src/utilities/store.js":"8","/Users/johnhands/Desktop/Coding/trello_clone/src/utilities/storeApi.js":"9"},{"size":197,"mtime":1610143386689,"results":"10","hashOfConfig":"11"},{"size":901,"mtime":1610161663800,"results":"12","hashOfConfig":"11"},{"size":780,"mtime":1610160081430,"results":"13","hashOfConfig":"11"},{"size":1300,"mtime":1610157273804,"results":"14","hashOfConfig":"11"},{"size":435,"mtime":1610161612566,"results":"15","hashOfConfig":"11"},{"size":1030,"mtime":1610160135443,"results":"16","hashOfConfig":"11"},{"size":1877,"mtime":1610292702465,"results":"17","hashOfConfig":"11"},{"size":359,"mtime":1610161646188,"results":"18","hashOfConfig":"11"},{"size":70,"mtime":1610159251613,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1o7n1yp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/johnhands/Desktop/Coding/trello_clone/src/index.js",[],["40","41"],"/Users/johnhands/Desktop/Coding/trello_clone/src/App.js",[],"/Users/johnhands/Desktop/Coding/trello_clone/src/components/List/List.js",["42"],"import React from 'react';\nimport { CssBaseline, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Title from './Title';\nimport Card from '../Card';\nimport InputContainer from '../Input/InputContainer';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    width: '300px',\n    backgroundColor: '#dbdbdb',\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nfunction List({ list }) {\n  const classes = useStyle();\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <CssBaseline />\n        <Title title={list.title} />\n        {list.cards.map((card) => (\n          <Card key={card.id} card={card} />\n        ))}\n        <InputContainer listId={list.id} />\n      </Paper>\n    </div>\n  );\n}\n\nexport default List;\n","/Users/johnhands/Desktop/Coding/trello_clone/src/components/List/Title.js",[],"/Users/johnhands/Desktop/Coding/trello_clone/src/components/Card.js",[],"/Users/johnhands/Desktop/Coding/trello_clone/src/components/Input/InputContainer.js",[],"/Users/johnhands/Desktop/Coding/trello_clone/src/components/Input/InputItem.js",[],"/Users/johnhands/Desktop/Coding/trello_clone/src/utilities/store.js",[],"/Users/johnhands/Desktop/Coding/trello_clone/src/utilities/storeApi.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":30,"nodeType":"49","messageId":"50","endLine":2,"endColumn":40},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]